{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Container/Container.module.css","Components/Filter/Filter.module.css","Components/ContactListItem/ContactListItem.jsx","Components/ContactList/ContactList.jsx","Components/ContactForm/ContactForm.jsx","Components/Container/Container.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactListItem","id","name","number","onDeleteContact","className","styles","contact","tel","type","onClick","ContactList","contacts","map","initialState","ContactForm","onSubmit","useState","inputValue","setInputValue","changeInput","e","currentTarget","value","form","preventDefault","reset","pattern","title","required","placeholder","onChange","buttonForm","Container","children","container","Filter","defaultProps","initialContacts","App","setContacts","filter","setFilter","normalizedFilter","toLowerCase","filteredContacts","includes","normalizedName","find","alert","newContact","shortid","generate","prState","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a36b182a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonForm\":\"ContactForm_buttonForm__2WOc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__AXvQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__sO7-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter\":\"Filter_Filter__9N3p9\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => {\r\n    return (\r\n        <li className={styles.contact}>\r\n            <p className={styles.name}>{name}</p>\r\n            <p className={styles.tel}>{number}</p>\r\n            <button type=\"button\" onClick={() => onDeleteContact(id)}>\r\n                Delete\r\n      </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n    return (\r\n        <ul className={styles.ContactList}>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    id={id}\r\n                    name={name}\r\n                    number={number}\r\n                    onDeleteContact={onDeleteContact}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nconst initialState = {\r\n    name: '',\r\n    number: '',\r\n};\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n    const { name, number } = inputValue;\r\n\r\n    const changeInput = e => {\r\n        const { name, value } = e.currentTarget;\r\n        setInputValue({ ...inputValue, [name]: value });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        onSubmit(name, number);\r\n        setInputValue(initialState);\r\n        e.currentTarget.reset();\r\n    };\r\n\r\n    return (\r\n        <form className={styles.form} onSubmit={handleSubmit}>\r\n            <h3>Name</h3>\r\n            <label>\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    placeholder=\"Enter your name\"\r\n                    onChange={changeInput}\r\n                />\r\n                <br />\r\n            </label>\r\n            <h3>Number</h3>\r\n            <label>\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n                    title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n                    required\r\n                    placeholder=\"Enter your number\"\r\n                    onChange={changeInput}\r\n                />\r\n                <br />\r\n            </label>\r\n            <button type=\"submit\" className={styles.buttonForm}>\r\n                Add contact\r\n      </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n    <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Container;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <div className={styles.Filter}>\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" value={value} onChange={onChange} />\r\n        </div>\r\n    );\r\n};\r\n\r\nFilter.defaultProps = {\r\n    value: '',\r\n};\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;","import React, { useState } from 'react';\nimport shortid from 'shortid';\nimport ContactList from './Components/ContactList/ContactList';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport Container from './Components/Container/Container';\nimport Filter from './Components/Filter/Filter';\nimport './styles.css';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nfunction App() {\n  const [contacts, setContacts] = useState(initialContacts);\n  const [filter, setFilter] = useState('');\n  const addContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    if (\n      contacts.find(contact => contact.name.toLowerCase() === normalizedName)\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    setContacts(prState => [newContact, ...prState]);\n  };\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const deleteContact = contactId =>\n    setContacts(prState => prState.filter(({ id }) => id !== contactId));\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n\n  return (\n    <Container>\n      <section className=\"Section\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n      </section>\n      <section className=\"Section\">\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList\n          contacts={filteredContacts}\n          onDeleteContact={deleteContact}\n        />\n      </section>\n    </Container>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"ContactListItem_contact__32Mwp\",\"name\":\"ContactListItem_name__19vOn\",\"tel\":\"ContactListItem_tel__1AwvQ\"};"],"sourceRoot":""}